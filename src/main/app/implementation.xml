<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <sub-flow name="deleteCustomerByID">
        <db:delete config-ref="Oracle_Configuration" doc:name="Database: Delete By Customer ID">
            <db:parameterized-query><![CDATA[delete from CustomerDetails where CustID = #[flowVars.ID]]]></db:parameterized-query>
        </db:delete>
        <choice doc:name="Choice">
            <when expression="#[payload == 1]">
                <set-payload value="{ &quot;message&quot; : &quot;Customer deleted&quot;, &quot;customerID&quot; : #[flowVars.ID] }" doc:name="Set Payload: Delete Customer Success"/>
                <set-property propertyName="http.status" value="200" doc:name="Property: Set Http Status 200"/>
            </when>
            <otherwise>
                <set-payload value="#[{&quot;v_returnCode&quot;:100,&quot;v_returnText&quot;:&quot;Customer details not found&quot;}]" doc:name="Set Payload: Delete Customer Failed"/>
                <set-property propertyName="http.status" value="404" doc:name="Property: Set Http Status 404"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="updateCustomerDetailsByID">
        <dw:transform-message doc:name="Transform Message: Update Customer">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
data:{
	custName: payload.custName,
	mobile: payload.mobile,
	address: payload.address,
	gender: payload.gender,
	birthDate: payload.birthDate as :date {format: "yyyy-MM-dd"} as :string {format: "dd-MMM-yyyy"}
}]]></dw:set-payload>
        </dw:transform-message>
        <db:update config-ref="Oracle_Configuration" doc:name="Database: Update By Customer ID">
            <db:parameterized-query><![CDATA[update CustomerDetails set custName = #[payload.data.custName], mobile = #[payload.data.mobile], address = #[payload.data.address], gender = #[payload.data.gender], birthDate = #[payload.data.birthDate] where CustID = #[flowVars.ID]]]></db:parameterized-query>
        </db:update>
        <choice doc:name="Choice">
            <when expression="#[payload == 1]">
                <set-payload value="{ &quot;message&quot; : &quot;Customer updated&quot;, &quot;customerID&quot; : #[flowVars.ID] }" doc:name="Set Payload: Update Success"/>
                <set-property propertyName="http.status" value="200" doc:name="Property: Set Http Status 200"/>
            </when>
            <otherwise>
                <set-payload value="#[{&quot;v_returnCode&quot;:100,&quot;v_returnText&quot;:&quot;Customer details not found&quot;}]" doc:name="Set Payload: Update Failed"/>
                <set-property propertyName="http.status" value="404" doc:name="Property: Set Http Status 404"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="postCustomerDetails">
        <dw:transform-message doc:name="Transform Message: Insert Customer">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
data:{
	custID: payload.custID,
	custName: payload.custName,
	mobile: payload.mobile,
	address: payload.address,
	gender: payload.gender,
	birthDate: payload.birthDate as :date {format: "yyyy-MM-dd"} as :string {format: "dd-MMM-yyyy"}
}]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="custID" value="#[payload.data.custID]" doc:name="Variable"/>
        <db:insert config-ref="Oracle_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[Insert into CustomerDetails VALUES (#[payload.data.custID],#[payload.data.custName],#[payload.data.mobile],#[payload.data.address],#[payload.data.gender],#[payload.data.birthDate])]]></db:parameterized-query>
        </db:insert>
        <set-payload value="{ &quot;message&quot; : &quot;Customer Added&quot;, &quot;customerID&quot;: #[flowVars.custID]  }" doc:name="Set Payload"/>
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property: Set Content-Type"/>
        <set-property propertyName="http.status" value="201" doc:name="Property: Set Http.Status"/>
    </sub-flow>
    <sub-flow name="getAllCustomerDetails">
        <db:select config-ref="Oracle_Configuration" doc:name="Database: Get all Customer">
            <db:parameterized-query><![CDATA[select * from CustomerDetails]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload.size() &gt; 0]">
                <dw:transform-message doc:name="Transform Message" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" metadata:id="905963bf-c13d-46be-8f9f-8341e4da3c3d">
                    <dw:input-payload/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	custID: payload01.CUSTID as :number,
	custName: payload01.CUSTNAME,
	mobile: payload01.MOBILE,
	address: payload01.ADDRESS,
	gender: payload01.GENDER,
	birthDate: payload01.BIRTHDATE as :date
})]]></dw:set-payload>
                </dw:transform-message>
                <set-property propertyName="http.status" value="200" doc:name="Property: Set Status=200"/>
            </when>
            <otherwise>
                <set-payload value="#[{&quot;v_returnCode&quot;:100,&quot;v_returnText&quot;:&quot;Customer details not found&quot;}]" doc:name="Set Payload"/>
                <set-property propertyName="http.status" value="404" doc:name="Property: Set Status=404"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="getCustomerByID">
        <db:select config-ref="Oracle_Configuration" doc:name="Database: Get By CustID">
            <db:parameterized-query><![CDATA[select * from CustomerDetails where CustID = #[flowVars.ID]]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload.size() &gt; 0]">
                <dw:transform-message doc:name="Transform Message CustID">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	custID: payload01.CUSTID as :number,
	custName: payload01.CUSTNAME,
	mobile: payload01.MOBILE,
	address: payload01.ADDRESS,
	gender: payload01.GENDER,
	birthDate: payload01.BIRTHDATE as :date
})]]></dw:set-payload>
                </dw:transform-message>
                <set-property propertyName="http.status" value="200" doc:name="Property: Set Status=200"/>
            </when>
            <otherwise>
                <set-payload value="#[{&quot;v_returnCode&quot;:100,&quot;v_returnText&quot;:&quot;Customer not found&quot;}]" doc:name="Set Payload"/>
                <set-property propertyName="http.status" value="404" doc:name="Property: Set Status=404"/>
            </otherwise>
        </choice>
    </sub-flow>
</mule>
